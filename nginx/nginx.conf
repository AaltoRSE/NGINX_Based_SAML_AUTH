events {
    worker_connections 1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    proxy_buffer_size   128k;
    proxy_buffers       4 256k;
    proxy_busy_buffers_size 256k;
    log_format custom_log_format '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$request_time"  "$query_string"';        
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'location="$uri" WebSocket';
      
    access_log off;
    server {
        listen 80;
        server_name localhost;
        access_log /dev/stdout custom_log_format;    
        location /saml/auth {
            proxy_pass       http://saml_proxy:3000;
            proxy_set_header Host                    $host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            # or, if you are handling multiple domains:
            # proxy_set_header X-Auth-Request-Redirect $scheme://$host$request_uri;
        }
        location /saml/ {
            proxy_pass       http://saml_proxy:3000;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Forwarded-Uri  $request_uri;
            # nginx auth_request includes headers but not body
        }
        location @sso_redirect {
        # Redirect to SSO for authentication
            return 302 /saml/login;
        }
        location /saml/websocket_auth {                      
            proxy_pass http://saml_proxy:3000;            
            access_log /dev/stdout custom;
        }

        location /ws/socket.io/ {
            auth_request /saml/websocket_auth;
#            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header Host $host;
            proxy_pass http://backend:7860/;    
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;     
            access_log /dev/stdout custom;
        }        

        location / {
            auth_request /saml/auth;
            error_page 401 @sso_redirect;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            proxy_set_header X-Original-Host $host;
            proxy_pass http://backend:7860/;
            # or "root /path/to/site;" or "fastcgi_pass ..." etc
        }
    }
}