apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app_name }}
  labels:
    app.kubernetes.io/name: {{ .Values.app_name }}
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app_name }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.app_name }}
        app.kubernetes.io/component: server
    spec:
      tolerations:
        - key: "cs-aalto/gpu"
          operator: Exists
          effect: NoSchedule      
      nodeSelector:
        # We need to geta  GPU node
        kubernetes.io/hostname: k8s-gpu.cs.aalto.fi                                
      containers:
        - name: {{ .Values.app_name }}
          image: {{ .Values.app_image }}
          # Update your config as necessary for your app!          
          ports:
            - containerPort: 7860 
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - mountPath: /home/user/.cache/fairseq2/
              name: {{ .Values.app_name }}-app-volume
          resources: # Restrict to one GPU
            requests:              
              cpu: "250m"
            limits: # For GPUs, this will block a full GPU for this model (probably shouldn't deploy more than one instance)...               
              nvidia.com/gpu: 1
              cpu: 1
      volumes:
        - name: {{ .Values.app_name }}-app-volume
          persistentVolumeClaim:
            claimName: {{ .Values.app_name }}-app-volume

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app_name }}-app-volume
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: nfs-client # Empty string must be explicitly set otherwise default StorageClass will be set
  accessModes: [ReadWriteOnce] # This should only ever be accessed by one mongoDB server instance
  resources:
    requests:
      storage: 10Gi
#---