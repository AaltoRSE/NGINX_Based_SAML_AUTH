apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app_name }}-saml-proxy-mongo-svc
  labels:
    app.kubernetes.io/name: {{ .Values.app_name }}-saml-proxy-mongo-svc
    app.kubernetes.io/component: server
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app.kubernetes.io/name: {{ .Values.app_name }}-saml-proxy-mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
# mongo database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app_name }}-saml-proxy-mongo
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.app_name }}-saml-proxy-mongo
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app_name }}-saml-proxy-mongo
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.app_name }}-saml-proxy-mongo
        app.kubernetes.io/component: server
    spec:
      containers:
        - name: {{ .Values.app_name }}-saml-proxy-mongo-db
          image: mongo:7.0.4
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 1
          env:
            - {
                name: MONGO_INITDB_ROOT_USERNAME,
                valueFrom: { secretKeyRef: { name: {{ .Values.app_name }}-saml-proxy-mongo, key: user } },
              }
            - {
                name: MONGO_INITDB_ROOT_PASSWORD,
                valueFrom: { secretKeyRef: { name: {{ .Values.app_name }}-saml-proxy-mongo, key: password } },
              }
          volumeMounts:
            - mountPath: /data/db
              name: {{ .Values.app_name }}-saml-proxy-mongo-volume
      volumes:
        - name: {{ .Values.app_name }}-saml-proxy-mongo-volume
          persistentVolumeClaim:
            claimName: {{ .Values.app_name }}-saml-proxy-mongo-volume

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app_name }}-saml-proxy-mongo-volume
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: nfs-client # Empty string must be explicitly set otherwise default StorageClass will be set
  accessModes: [ReadWriteOnce] # This should only ever be accessed by one mongoDB server instance
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app_name }}-saml-proxy-mongo-volume
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: nfs-client # Empty string must be explicitly set otherwise default StorageClass will be set
  accessModes: [ReadWriteOnce] # This should only ever be accessed by one mongoDB server instance
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.app_name }}-saml-proxy-mongo
type: Opaque
data:
  user: {{ .Values.saml_proxy_mongo_user }}
  sp.key: {{ .Values.saml_proxy_mongo_password }}  